<?xml version="1.0" encoding="UTF-8"?>
<project name="NodeBox" default="install" basedir=".">
    <description>Builds and tests the NodeBox core.</description>

    <target name="properties">
        <property name="src" value="src"/>
        <property name="test" value="test"/>
        <property name="lib" value="lib"/>
        <property name="examples" value="examples"/>
        <property name="build" value="build"/>
        <property name="build.prod" location="${build}/prod"/>
        <property name="build.test" location="${build}/test"/>
        <property name="dist" value="dist"/>
        <property name="dist.nodebox" value="${dist}/mac"/>
        <property name="dist.nodebox.examples" value="${dist.nodebox}/Examples"/>
        <property name="apple.appstub"
                  location="/System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub"/>
        <property name="mac.application" location="${dist.nodebox}/${ant.project.name}.app/"/>
        <property name="mac.application.contents" location="${mac.application}/Contents"/>
        <property name="mac.application.macos" location="${mac.application.contents}/MacOS"/>
        <property name="mac.application.macos.stub" location="${mac.application.macos}/${ant.project.name}"/>
        <property name="mac.application.resources" location="${mac.application.contents}/Resources"/>
        <property name="mac.application.resources.java" location="${mac.application.resources}/Java"/>

        <!-- Determine the platform family: windows, mac or linux. -->
        <condition property="platform.windows" value="true">
            <or>
                <equals arg1="${os.name}" arg2="Windows XP"/>
            </or>
        </condition>
        <condition property="platform.mac" value="true">
            <equals arg1="${os.name}" arg2="Mac OS X"/>
        </condition>
        <condition property="platform.unix" value="true">
            <equals arg1="${os.name}" arg2="Linux"/>
        </condition>
        <condition property="platform" value="mac">
            <isset property="platform.mac"/>
        </condition>
        <condition property="platform" value="windows">
            <isset property="platform.windows"/>
        </condition>
        <condition property="platform" value="linux">
            <isset property="platform.linux"/>
        </condition>

        <property name="platform.dir" location="platform/${platform}"/>
        <property name="platform.src" location="${platform.dir}/src"/>
        <property name="platform.lib" location="${platform.dir}/lib"/>
        <property name="platform.res" location="${platform.dir}/res"/>

        <path id="project.classpath">
            <pathelement location="${build.prod}"/>
            <pathelement location="${build.test}"/>
            <!-- <pathelement location="${platform.lib}"/> -->
            <fileset dir="${lib}">
                <include name="*.jar"/>
            </fileset>
        </path>
    </target>

    <target name="init" depends="properties">
        <mkdir dir="${build.prod}"/>
        <mkdir dir="${build.test}"/>
        <mkdir dir="${dist}"/>
    </target>

    <target name="compile" depends="init">
        <javac destdir="${build.prod}" source="1.5" target="1.5">
            <src path="${src}"/>
            <!--<src path="${platform.src}"/> -->
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="compile-tests" depends="compile">
        <javac srcdir="${test}" destdir="${build.test}" source="1.5" target="1.5">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <junit haltonfailure="true">
            <classpath refid="project.classpath"/>
            <formatter type="brief" usefile="false"/>
            <batchtest>
                <fileset dir="${build.test}" includes="**/*Test.class"/>
            </batchtest>
        </junit>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${dist}/lib"/>
        <jar jarfile="${dist}/lib/nodebox.jar" basedir="${build.prod}"/>
    </target>

    <target name="run-jar" depends="jar">
        <java jar="${jars}/${ant.project.name}.jar" classpath="${bin}" fork="true">
        </java>
    </target>

    <target name="dist-win" depends="jar">
    </target>

    <target name="dist-mac" depends="jar" description="Make a double-clickable Mac OS X application">
        <mkdir dir="${dist.nodebox}"/>
        <mkdir dir="${mac.application.resources.java}"/>
        <mkdir dir="${mac.application.macos}"/>
        <!-- Copy program jar and library jars -->
        <copy file="${dist}/lib/nodebox.jar"
              todir="${mac.application.resources.java}"/>
        <copy todir="${mac.application.resources.java}">
            <fileset dir="${lib}">
                <include name="*.jar"/>
                <include name="*.zip"/>
                <include name="*.py"/>
                <include name="*.properties"/>
            </fileset>
            <fileset dir="${platform.lib}">
                <include name="*.jar"/>
                <include name="*.zip"/>
                <include name="*.py"/>
                <include name="*.properties"/>
            </fileset>
        </copy>
        <copy todir="${dist.nodebox.examples}">
            <fileset dir="${examples}"/>
        </copy>
        <!-- Copy application stub -->
        <copy file="${apple.appstub}" toFile="${mac.application.macos}/${ant.project.name}"/>
        <!-- fix stub permissions -->
        <chmod file="${mac.application.macos.stub}" perm="755"/>
        <!-- copy additional Mac contents -->
        <copy todir="${mac.application.contents}">
            <fileset dir="${platform.res}"/>
        </copy>
        <!-- Make directory into a bundle -->
        <exec executable="/Developer/Tools/SetFile">
            <arg line="-a B ${mac.application}"/>
        </exec>
    </target>

    <!-- Install target, for building the actual product -->
    <target name="install" depends="dist-mac" description="Create application">
    </target>

    <target name="run" depends="install" description="Run the double-clickable application">
        <!-- Use the exec task to open the application -->
        <exec dir="${dist}" executable="/usr/bin/open" os="Mac OS X">
            <arg line="${ant.project.name}.app"/>
        </exec>
    </target>

    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
</project>
